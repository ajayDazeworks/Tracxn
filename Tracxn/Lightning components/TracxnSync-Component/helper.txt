({
    getResponse: function (component, publicId) {
        component.set("v.spinner",true);
        let action = component.get("c.getcalloutResponseContents");
        action.setParams({
            "recordid": component.get('v.recordId'),
            "publicId": publicId,
            "UpdateconList": component.get("v.UpserConlist")
        });
        action.setCallback(this, function (response) {
            let state = response.getState();
            let returnedValues = response.getReturnValue();
            console.log('returnedValues ==>', JSON.stringify(returnedValues));
            component.set("v.spinner", false);
            if (state === "SUCCESS") {
                //$A.get('e.force:refreshView').fire();
                component.set("v.isOpen", false);
                component.set("v.issuccessOpen", true);
                component.set("v.NoResult", false);
                let response = returnedValues;
                if (response.message.includes("Success")) {
                    if(component.get("v.UpserConlist")){
                        this.displayMessage('Success', 'success', 'Account and contact details have been successfuly synced with Tracxn');
                    }else{
                        this.displayMessage('Success', 'success', 'Account details have been successfully synced with Tracxn');
                    }
                    component.set("v.spinner", true);
                    $A.get('e.force:refreshView').fire();
                    $A.get("e.force:closeQuickAction").fire();
                    setTimeout(function () {
                        component.set("v.spinner", false);
                        $A.get('e.force:refreshView').fire();
                    }, 5000);
                } else if (response.message.includes("Error")) {
                    this.displayMessage('Server', 'error', 'Not able to connect');
                    $A.get("e.force:closeQuickAction").fire();
                } else if (response.message.includes("No Result")) {
                    component.set("v.NoResult", true);
                    component.set("v.isAccount", true);
                }
            }
        });
        $A.enqueueAction(action);
    },
    
    displayMessage: function (title, type, message) {
        console.log(type);
        console.log('title ==>',title,' type ==>',type,' Message ::',message);
        let toastEvent = $A.get("e.force:showToast");
        toastEvent.setParams({
            "title": title,
            "message": message,
            "type": type
        });
        toastEvent.fire();
        //$A.get('e.force:refreshView').fire();
    },
})